/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.text.*;
import java.util.Collections;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
/**
 *
 * @author Zheng
 */
public class F1 extends javax.swing.JApplet {
    
   int flag=0;
   int flag2=1;
   int flag3=0;
   int k = 0;
   int k2=1;
   int k3=0;
   Integer[] a=new Integer[] {9,8,7,6,5,4,3,2,1,0};
   Integer[] b=new Integer[]{a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]};

   BubbleSort bs = new BubbleSort();
   InsertionSort is= new InsertionSort();
   SelectionSort ss = new SelectionSort();
   String sortMethod = "Bubble Sort";
    /**
     * Initializes the applet F1
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel07 = new javax.swing.JLabel();
        jLabel04 = new javax.swing.JLabel();
        jLabel02 = new javax.swing.JLabel();
        jLabel01 = new javax.swing.JLabel();
        jLabel00 = new javax.swing.JLabel();
        jLabel06 = new javax.swing.JLabel();
        jLabel05 = new javax.swing.JLabel();
        jLabel08 = new javax.swing.JLabel();
        jLabel09 = new javax.swing.JLabel();
        jLabel03 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList7 = new javax.swing.JList();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Array Input"));
        jPanel2.setToolTipText("Generate a random array from 0-9");

        jButton7.setText("generate ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Generate a random array from 0 to 9");

        jLabel07.setBackground(new java.awt.Color(255, 255, 51));
        jLabel07.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel07.setForeground(new java.awt.Color(255, 51, 51));
        jLabel07.setText("7");

        jLabel04.setBackground(new java.awt.Color(255, 255, 51));
        jLabel04.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel04.setForeground(new java.awt.Color(255, 51, 51));
        jLabel04.setText("4");

        jLabel02.setBackground(new java.awt.Color(255, 255, 51));
        jLabel02.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel02.setForeground(new java.awt.Color(255, 51, 51));
        jLabel02.setText("2");

        jLabel01.setBackground(new java.awt.Color(255, 255, 51));
        jLabel01.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel01.setForeground(new java.awt.Color(255, 51, 51));
        jLabel01.setText("1");

        jLabel00.setBackground(new java.awt.Color(255, 255, 51));
        jLabel00.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel00.setForeground(new java.awt.Color(255, 51, 51));
        jLabel00.setText("0");

        jLabel06.setBackground(new java.awt.Color(255, 255, 51));
        jLabel06.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel06.setForeground(new java.awt.Color(255, 51, 51));
        jLabel06.setText("6");

        jLabel05.setBackground(new java.awt.Color(255, 255, 51));
        jLabel05.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel05.setForeground(new java.awt.Color(255, 51, 51));
        jLabel05.setText("5");

        jLabel08.setBackground(new java.awt.Color(255, 255, 51));
        jLabel08.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel08.setForeground(new java.awt.Color(255, 51, 51));
        jLabel08.setText("8");

        jLabel09.setBackground(new java.awt.Color(255, 255, 51));
        jLabel09.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel09.setForeground(new java.awt.Color(255, 51, 51));
        jLabel09.setText("9");

        jLabel03.setBackground(new java.awt.Color(255, 255, 51));
        jLabel03.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel03.setForeground(new java.awt.Color(255, 51, 51));
        jLabel03.setText("3");

        jLabel15.setBackground(new java.awt.Color(255, 255, 51));
        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 51, 51));
        jLabel15.setText("[");

        jLabel16.setBackground(new java.awt.Color(255, 255, 51));
        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 51, 51));
        jLabel16.setText("]");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel09)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel08)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel07)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel06)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel05)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel04)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel03)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel02)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel01)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel00)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel07)
                        .addComponent(jLabel00)
                        .addComponent(jLabel01)
                        .addComponent(jLabel02)
                        .addComponent(jLabel04)
                        .addComponent(jLabel08)
                        .addComponent(jLabel06)
                        .addComponent(jLabel05)
                        .addComponent(jLabel09)
                        .addComponent(jLabel03)
                        .addComponent(jLabel15)
                        .addComponent(jLabel16))
                    .addComponent(jButton7))
                .addGap(418, 418, 418))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Functional Buttons"));
        jPanel3.setToolTipText("Buttons to execute the codes to see the results");

        jButton1.setText("next step");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("auto");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("stop");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("help");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(43, 43, 43)
                        .addComponent(jButton5))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButton6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        autostep = new javax.swing.Timer(1200,new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        if( autostep.isRunning() ) {
            autostep.stop();
        }

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Execution Result"));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Show the current oder of the array (* means two swapped Integers)");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "a[0]", "a[1]", "a[2]", "a[3]", "a[4]", "a[5]", "a[6]", "a[7]", "a[8]", "a[9]"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("Show the current order of the array");
        jTable1.getTableHeader().setReorderingAllowed(false);
        //((DefaultTableCellRenderer)jTable1.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer)jTable1.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        jTable1.getTableHeader().setFont(new Font( "Tahoma" , Font.BOLD, 15 ));
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        jTable1.setDefaultRenderer(String.class, centerRenderer);
        jTable1.setRowHeight(30);
        jTable1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jTable1CaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        jScrollPane4.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
            jTable1.getColumnModel().getColumn(9).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Explanation Window"));
        jPanel5.setToolTipText("Description for each variable in each line");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Description of each variable");

        jTable2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "i", "j", "a[j]", "a[j+1]", "temp", "Swap"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setToolTipText("Description of each variable");
        jTable2.getTableHeader().setReorderingAllowed(false);
        ((DefaultTableCellRenderer)jTable2.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        jTable2.setDefaultRenderer(String.class, centerRenderer);
        jScrollPane9.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(509, 509, 509))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Sort Methods"));

        jTabbedPane2.setToolTipText("There are codes of three different kinds of sort method in Java");
        jTabbedPane2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane2StateChanged(evt);
            }
        });

        jList5.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "for (int i=0;i<a.length-1;i++){  ", "      for(int j=0;j<a.length-1;j++)", "      if(a[j]>=a[j+1]){", "           int temp=a[j];", "           a[j]=a[j+1];", "           a[j+1]=temp;", "      }", "}" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(jList5);

        jTabbedPane2.addTab("Bubble Sort", jScrollPane5);

        jList6.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "for (int i=1;i<a.length;i++){  ", "      int temp=a[i];  ", "      int j=i-1;  ", "      while ((j>=0)&&(a[j]>temp)){  ", "          a[j+1]=a[j];  ", "          a[j]=temp;", "          j--;", "      }", "}" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(jList6);

        jTabbedPane2.addTab("Insertion Sort", jScrollPane6);

        jList7.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "for (int i=0;i<a.length-1;i++){ ", "      for(int j=i+1;j<a.length;j++){", "        if(a[j]<a[i]){", "          int temp=a[j];", "          a[j]=a[i];", "          a[i]=temp;", "        }", "     }", "}", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList7);

        jTabbedPane2.addTab("Selection Sort", jScrollPane1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.getAccessibleContext().setAccessibleName("Function Buttons");
        jPanel6.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        jButton2.setEnabled(true);
  
    	jList5.setSelectedIndex(iRow);

    	jList5.ensureIndexIsVisible(iRow); 
    	jList6.setSelectedIndex(iRow);

    	jList6.ensureIndexIsVisible(iRow); 
    	jList7.setSelectedIndex(iRow);

    	jList7.ensureIndexIsVisible(iRow);
    	
        
if (sortMethod.equals("Bubble Sort")){
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            
        if(iRow == 0){
            if(flag==0)
          
                 
          //  model.addRow(new Object[]{"Bubble Sort"});
           model.addRow(new Object[]{a[0].toString(),a[1].toString(),a[2].toString(),a[3].toString(),a[4].toString(),a[5].toString(),a[6].toString(),a[7].toString(),a[8].toString(),a[9].toString()});
           model2.addRow(new Object[]{flag,"","","","",""});
        if (flag>=a.length-1){
               jButton1.setEnabled(false); 
               jButton3.setEnabled(false);
               autostep.stop();
            }
        }
        else if (iRow==1){
            model2.addRow(new Object[]{flag,k,"","","",""});
//            if(a[k]<=a[k+1])
                
        }
        else if(iRow==2){
            if (a[k]<=a[k+1]){
                iRow=5;
//            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.addRow(new Object[]{flag,k,a[k],a[k+1],"","No"});  
            }
            else{
                model2.addRow(new Object[]{flag,k,a[k],a[k+1],"",""});
            }
        }
        else if(iRow==3){
         
//            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.addRow(new Object[]{flag,k,a[k],"",a[k],""});  
            
        }
        
        else if(iRow==4){
            
//            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.addRow(new Object[]{flag,k,a[k+1],a[k+1],"",""});  
            
        }
        else if (iRow==5){
//            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.addRow(new Object[]{flag,k,"",a[k],a[k],""});  
        }
        else if (iRow==6){
           
         if(a[k]>a[k+1])  {
             
           a = bs.Bubble_Sort(a, k);
           Object[] temp = new Object[10];
           for (int ind = 0; ind<10;ind++){
               if (ind != k && ind != k+1){
                   temp[ind]=a[ind].toString();
               }
               else{
                   temp[ind]=a[ind].toString()+"*";
               }
               //System.out.println(temp[ind]);
           }
           model.addRow(temp);
//           model.addRow(new Object[]{a[0].toString(),a[1].toString(),a[2].toString(),a[3].toString(),a[4].toString(),a[5].toString(),a[6].toString(),a[7].toString(),a[8].toString(),a[9].toString()});

//            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.addRow(new Object[]{flag,k,"","","","Yes"});
            
         }
        iRow=0;
            k++;
            if(k>=a.length-1){
               
                iRow=6;
            }
            
            
            
           
          
//         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            
            
        }
        else if(iRow==7){
             model2.addRow(new Object[]{flag,k-1,"","","",""});
        flag++;
        iRow=-1;
         k=0;
        Integer[] b=new Integer[] {0,1,2,3,4,5,6,7,8,9};             
                   if (Arrays.equals(a, b)){
                      jButton1.setEnabled(false);
                       jButton5.setEnabled(false);
                       jButton4.setEnabled(false);
                       jButton3.setEnabled(true);
                      autostep.stop();
                   }
        }
//      if(iRow == 6 ){
//                    Integer[] b=new Integer[] {0,1,2,3,4,5,6,7,8,9};             
//                    if (Arrays.equals(a, b)){
//                      jButton1.setEnabled(false);
//                    }
//                    else if(k==a.length-1) {
//                        iRow = -1;
//                    }
//                    else{
//                        iRow=0;
//                    }
//      
//      }
               
             
        }
        
else if(sortMethod.equals("Insertion Sort")){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        
        if(iRow ==0){
            if(flag2 ==1){
            model.addRow(new Object[]{a[0].toString(),a[1].toString(),a[2].toString(),a[3].toString(),a[4].toString(),a[5].toString(),a[6].toString(),a[7].toString(),a[8].toString(),a[9].toString()});
            }
            model2.addRow(new Object[]{flag2,"","","","",""});
            if (flag2>=a.length){
               jButton1.setEnabled(false);
               autostep.stop();
            }
        }
        else if (iRow == 1){
            model2.addRow(new Object[]{flag2,"","","",a[flag2],""});
        }
        else if (iRow ==2){
            k2 = flag2-1;
            model2.addRow(new Object[]{flag2,k2,"","","",""});
        }
        else if (iRow ==3){
//            System.err.println(k2+", "+flag2);
            if(k2>=0 && a[k2]>a[k2+1]){
                model2.addRow(new Object[]{flag2,k2,a[k2],"",a[k2+1],""});
            }
            else{
                model2.addRow(new Object[]{flag2,k2,"","","","No"});
                iRow = 7;
            }
        }
        else if (iRow ==4){
            model2.addRow(new Object[]{flag2,k2,a[k2],a[k2],"",""});
        }
        else if (iRow == 5){
            model2.addRow(new Object[]{flag2,k2,a[k2+1],"",a[k2+1],""});
        }
        else if (iRow == 6){
            k2--;
            model2.addRow(new Object[]{flag2,k2,"","","",""});
        }
        else if (iRow == 7){
            a = is.Insertion_Sort(a, k2+2);
             Object[] temp = new Object[10];
           for (int ind = 0; ind<10;ind++){
               if (ind != k2+2 && ind != k2+1){
                   temp[ind]=a[ind].toString();
               }
               else{
                   temp[ind]=a[ind].toString()+"*";
               }
               //System.out.println(temp[ind]);
           }
           model.addRow(temp);
//model.addRow(new Object[]{a[0].toString(),a[1].toString(),a[2].toString(),a[3].toString(),a[4].toString(),a[5].toString(),a[6].toString(),a[7].toString(),a[8].toString(),a[9].toString()});
            model2.addRow(new Object[]{flag2,k2,"","","","Yes"});
            iRow = 2;
        }
        else if (iRow == 8){
            iRow = -1;
            flag2 ++;
        }
       }
else if (sortMethod.equals("Selection Sort")){
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
    if(iRow ==0){
        if(flag3==0){
        model.addRow(new Object[]{a[0].toString(),a[1].toString(),a[2].toString(),a[3].toString(),a[4].toString(),a[5].toString(),a[6].toString(),a[7].toString(),a[8].toString(),a[9].toString()});
        }
        model2.addRow(new Object[]{flag3,"","","","",""});
        k3=flag3+1;
        if (flag3>=a.length-1){
            jButton1.setEnabled(false);
            autostep.stop();
        }
    }
    else if (iRow ==1){
        model2.addRow(new Object[]{flag3,k3,"","","",""});
        if(k3>=a.length){
            iRow=7;
        }
    }
    else if (iRow ==2){
        if(a[k3]>=a[flag3]){
            model2.addRow(new Object[]{flag3,k3,a[k3],a[flag3],"","No"});
            iRow = 6;
        }
        else{
            model2.addRow(new Object[]{flag3,k3,a[k3],a[flag3],"",""});
        }
        
    }
    else if(iRow ==3){
        model2.addRow(new Object[]{flag3,k3,a[k3],"",a[k3],""});
    }
    else if(iRow ==4){
        model2.addRow(new Object[]{flag3,k3,a[flag3],a[flag3],"",""});
    }
    else if(iRow == 5){
        model2.addRow(new Object[]{flag3,k3,"",a[k3],a[k3],""});
    }
    else if(iRow == 6){
        a = ss.Selection_Sort(a,flag3,k3);
         Object[] temp = new Object[10];
           for (int ind = 0; ind<10;ind++){
               if (ind != flag3 && ind != k3){
                   temp[ind]=a[ind].toString();
               }
               else{
                   temp[ind]=a[ind].toString()+"*";
               }
               //System.out.println(temp[ind]);
           }
           model.addRow(temp);
//        model.addRow(new Object[]{a[0].toString(),a[1].toString(),a[2].toString(),a[3].toString(),a[4].toString(),a[5].toString(),a[6].toString(),a[7].toString(),a[8].toString(),a[9].toString()});
        model2.addRow(new Object[]{flag3,k3,"","","","Yes"});

    }
    else if (iRow ==7){
        model2.addRow(new Object[]{flag3,k3,"","","",""});
        k3++;
        iRow=0;
    }
    else if (iRow == 8){
        model2.addRow(new Object[]{flag3,k3,"","","",""});
        flag3++;
        iRow=-1;
    }
}

        
        jTable1.changeSelection(jTable1.getRowCount()-1,0,false,false);
           jTable2.changeSelection(jTable2.getRowCount()-1,0,false,false);
        iRow++;
    	
    	

        //stackPanel.repaint();

    		
    		
   	//jList6.setSelectedIndex(iRow);

    //	jList6.ensureIndexIsVisible(iRow);  
    		
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        iRow = 0;
        a =new Integer[]{b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9]};
        flag=0;
        flag2=1;
        flag3=0;
        k = 0;
        k2=1;
        k3=0;
        jButton1.setEnabled(true);
         jButton4.setEnabled(true);
          jButton5.setEnabled(true);
           jButton6.setEnabled(true);
//        jButton2.setEnabled(false);
    	 jList5.setSelectedIndex(iRow);

         jList5.ensureIndexIsVisible(iRow);
         jList6.setSelectedIndex(iRow);

         jList6.ensureIndexIsVisible(iRow);
         jList7.setSelectedIndex(iRow);

         jList7.ensureIndexIsVisible(iRow);
       
         DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            int rc= model.getRowCount();
            for(int i = 0;i<rc;i++){
                model.removeRow(0);
            }  
        DefaultTableModel model2=(DefaultTableModel)jTable1.getModel();
        int rc2= model2.getRowCount();
            for(int i = 0;i<rc2;i++){
            model2.removeRow(0);
             }  
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         autostep.start();
    	 jButton4.setEnabled(false);
         jButton1.setEnabled(false);
         jButton3.setEnabled(false);
         ActionListener[] stepListeners = jButton1.getActionListeners();
 		ActionEvent myEvt = new ActionEvent(jButton1,evt.getID(),jButton1.getText());
 		for( int j = 0; j < stepListeners.length; j++ ) 
 			stepListeners[j].actionPerformed(myEvt);
               if((flag>a.length-1)||(flag2>a.length)||(flag3>a.length-1)){
                   autostep.stop();
               }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        autostep.stop();
    	jButton4.setEnabled(true);
        Collections.shuffle(Arrays.asList(a));
        b=new Integer[]{a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]};
        jLabel00.setText(a[9].toString());
        jLabel01.setText(a[8].toString());
        jLabel02.setText(a[7].toString());
        jLabel03.setText(a[6].toString());
        jLabel04.setText(a[5].toString());
        jLabel05.setText(a[4].toString()); 
        jLabel06.setText(a[3].toString());
        jLabel07.setText(a[2].toString());
        jLabel08.setText(a[1].toString());
        jLabel09.setText(a[0].toString());
        flag=0;
        flag2=1;
        flag3=0;
        k = 0;
        k2=1;
        k3=0;
        //jTextArea1.setText(Arrays.toString(a)+"\n");
             
jButton1.setEnabled(true);
//jButton2.setEnabled(false);
  iRow=0;
  jList5.setSelectedIndex(iRow);

         jList5.ensureIndexIsVisible(iRow);
         jList6.setSelectedIndex(iRow);

         jList6.ensureIndexIsVisible(iRow);
         jList7.setSelectedIndex(iRow);

         jList7.ensureIndexIsVisible(iRow);
DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            int rc= model.getRowCount();
            for(int i = 0;i<rc;i++){
                model.removeRow(0);
            }  
DefaultTableModel model2=(DefaultTableModel)jTable1.getModel();
int rc2= model2.getRowCount();
    for(int i = 0;i<rc2;i++){
    model2.removeRow(0);
     }  
    }//GEN-LAST:event_jButton7ActionPerformed
    
    private void jTabbedPane2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane2StateChanged
        // TODO add your handling code here:
        autostep.stop();
    	jButton4.setEnabled(true);
        iRow=0;
        flag=0;
        flag2=1;
        flag3=0;
        k = 0;
        k2=1;
        k3=0;
        a =new Integer[]{b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9]};
        int ind = jTabbedPane2.getSelectedIndex();
        sortMethod = jTabbedPane2.getTitleAt(ind);
  DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
   DefaultTableModel model2=(DefaultTableModel)jTable1.getModel();
        if (sortMethod.equals("Bubble Sort")){
        jList5.setSelectedIndex(iRow);
          jTable2.getColumnModel().getColumn(3).setHeaderValue("a[j+1]");
           repaint();

            int rc= model.getRowCount();
            for(int i = 0;i<rc;i++){
                model.removeRow(0);
            }  
       
        int rc2= model2.getRowCount();
            for(int i = 0;i<rc2;i++){
            model2.removeRow(0);
             }  
        }
        else if(sortMethod.equals("Insertion Sort")){
        jList6.setSelectedIndex(iRow);
         jTable2.getColumnModel().getColumn(3).setHeaderValue("a[j+1]");
          repaint();

         //DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            int rc= model.getRowCount();
            for(int i = 0;i<rc;i++){
                model.removeRow(0);
            }  
      //  DefaultTableModel model2=(DefaultTableModel)jTable1.getModel();
        int rc2= model2.getRowCount();
            for(int i = 0;i<rc2;i++){
            model2.removeRow(0);
             }  
        }
        else if(sortMethod.equals("Selection Sort")){
            jTable2.getColumnModel().getColumn(3).setHeaderValue("a[i]");
             repaint();


        jList7.setSelectedIndex(iRow);
        // DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            int rc= model.getRowCount();
            for(int i = 0;i<rc;i++){
                model.removeRow(0);
            }  
       // DefaultTableModel model2=(DefaultTableModel)jTable1.getModel();
        int rc2= model2.getRowCount();
            for(int i = 0;i<rc2;i++){
            model2.removeRow(0);
             }       
        }
        jButton1.setEnabled(true);
//        jButton2.setEnabled(true);
    }//GEN-LAST:event_jTabbedPane2StateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jButton4.setEnabled(true);
        jButton1.setEnabled(true);
         jButton3.setEnabled(true);
    	autostep.stop();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         helpFrame.pack();
        helpFrame.show();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable1CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTable1CaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1CaretPositionChanged

    PrompWindow helpFrame =new PrompWindow();
    int iRow=0;
    private javax.swing.Timer autostep;
   
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel00;
    private javax.swing.JLabel jLabel01;
    private javax.swing.JLabel jLabel02;
    private javax.swing.JLabel jLabel03;
    private javax.swing.JLabel jLabel04;
    private javax.swing.JLabel jLabel05;
    private javax.swing.JLabel jLabel06;
    private javax.swing.JLabel jLabel07;
    private javax.swing.JLabel jLabel08;
    private javax.swing.JLabel jLabel09;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList5;
    private javax.swing.JList jList6;
    private javax.swing.JList jList7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
  
}
class PrompWindow extends javax.swing.JFrame {
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel lblHelp;
    private javax.swing.JList listHelpContent;
    private javax.swing.JPanel pnlClose;
    private javax.swing.JPanel pnlHelpContent;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane scrollHelpContent;
    private javax.swing.JScrollPane scrollHelpDetail;
    private javax.swing.JTextPane txtpnlDetail;
    EventHandler hd = new EventHandler(this);
    /** Creates new form PrompWindow */
    public PrompWindow() {
        initComponents();
    }
    private void initComponents() {
        pnlTitle = new javax.swing.JPanel();
        lblHelp = new javax.swing.JLabel();
        pnlHelpContent = new javax.swing.JPanel();
        scrollHelpContent = new javax.swing.JScrollPane();
        listHelpContent = new javax.swing.JList();
        listHelpContent = new javax.swing.JList();
        scrollHelpDetail = new javax.swing.JScrollPane();
        txtpnlDetail = new javax.swing.JTextPane();
        pnlClose = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();

        addWindowListener(hd);

        lblHelp.setFont(new java.awt.Font("Dialog", 1, 18));
        lblHelp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHelp.setText("Help Contents");
        pnlTitle.add(lblHelp);

        getContentPane().add(pnlTitle, java.awt.BorderLayout.NORTH);

        pnlHelpContent.setLayout(new java.awt.BorderLayout());

        listHelpContent.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "1. Array Input Panel", "2. Sort Methods Panel", "3. Functional Buttons Panel", "4. Execution Result Panel", "5. Explanation Window" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listHelpContent.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listHelpContent.setDragEnabled(true);
        listHelpContent.setMaximumSize(null);
        listHelpContent.setMinimumSize(null);
        listHelpContent.setPreferredSize(new Dimension(140,200));
        txtpnlDetail.setPreferredSize(new Dimension(260,200));
        scrollHelpContent.setViewportView(listHelpContent);
        listHelpContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listHelpContentMouseClicked(evt);
            }
        });

        pnlHelpContent.add(scrollHelpContent, java.awt.BorderLayout.WEST);
        scrollHelpDetail.setViewportView(txtpnlDetail);
        pnlHelpContent.add(scrollHelpDetail, java.awt.BorderLayout.CENTER);
        getContentPane().add(pnlHelpContent, java.awt.BorderLayout.CENTER);

        btnClose.setText("Close Window");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        pnlClose.add(btnClose);

        getContentPane().add(pnlClose, java.awt.BorderLayout.SOUTH);

        pack();
    }

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
    }
    
    private void listHelpContentMouseClicked(java.awt.event.MouseEvent evt) {
         String[]  strHelp= //the data used here for now is still the fake;it will be changes in the meeting
         {
            "The Array Input Panel can help to generate a random array with 10 numbers from 0-9. The array is the resource for the further sort function.",
            "Sort Method Panel includes three kinds of sort: bubble sort, insertion sort and selection sort. By clicking each sort name, it can generate related sort code in Java.",
            "In Functional Buttons Panel, there are 5 buttons with different use. When button 'next step' is clicked, The related sort will go on one step by one step. When button 'reset' is clicked, the sort will be initialized. When button 'auto' is clicked, the related sort will go on automatically. When button 'stop' is clicked, the automatic step will stop. When button 'help' is clicked, it will show a new window for a brief introduction.",
            "The Execution Result Panel shows the current order of the array in each step.",
            "The Explanation Window shows a description of each lines of codes. It also reveals some important or changed items in the rows."
                
         };
         int i = 0;
         if (listHelpContent.isSelectionEmpty() == true)
            i = -1;
         else
            i = listHelpContent.getSelectedIndex();
         txtpnlDetail.setText(strHelp[i]);
    }
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {
        System.exit(0);
    }
    //for inner class window closing
    private class EventHandler extends WindowAdapter{
    Frame theFrame;
    public EventHandler(Frame f){
      theFrame = f;
    } // end constructor
    public void windowClosing(WindowEvent e){
      theFrame.setVisible(false);
    } // end windowClosing
  } // end EventHandler definition
    
}

class BubbleSort {
    	public Integer[] Bubble_Sort(Integer[] m, int i) {
//		Integer a[] = { 12, 34, 3, 56, 9, 23, 45, 19, 13, 10 };
//		 for (int j=0;j<a.length-1;j++){ //outer loop,passes
  
            Integer[] a = m;
            int j = i;
            if (j < a.length-1){
                if (a[j]>a[j+1]){
                    int temp = a[j];
                    a[j] = a[j+1];
                    a[j+1] = temp;
                }
            }
         return a;
    }
        
}


class InsertionSort {
    	public Integer[] Insertion_Sort(Integer[] m, int i) {
//		Integer a[] = { 12, 34, 3, 56, 9, 23, 45, 19, 13, 10 };
//		 for (int j=0;j<a.length-1;j++){ //outer loop,passes
  
            Integer[] a = m;
            int j = i-1;
            int curr=a[i];
            if ((j >=0) && a[j]>curr ){
               
                   a[i]=a[j];
                   a[j]=curr;
                }
            
         return a;
    }
        
}
class SelectionSort {
	public Integer[] Selection_Sort(Integer[] m, int i, int j) {
            Integer[] a = m;
			 if(a[j]<a[i]){
				int min=a[j];
				a[j]=a[i];
				a[i]=min;
                         }
                         return a;
        }
}
//class StatusColumnCellRenderer extends DefaultTableCellRenderer {
//
//        @Override
//        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
//
//            //Cells are by default rendered as a JLabel.
//            JLabel l = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);
//
//            //Get the status for the current row.
//            System.out.println(value);
//            if (row ==table.getRowCount()-1){
//                l.setForeground(Color.GREEN);
//            }
//            else{
//                l.setForeground(Color.BLACK);
//            }
//            //Return the JLabel which renders the cell.
//            return l;
//        }
//    }